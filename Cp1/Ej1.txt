a)
ghci> ['a', 'b', 'c']
"abc"
ghci> :t ['a', 'b', 'c']
['a', 'b', 'c'] :: [Char]

b)
ghci> ('a', 'b', 'c')
('a','b','c')
ghci> :t ('a', 'b', 'c')
('a', 'b', 'c') :: (Char, Char, Char)

c)
ghci> [(False, 'O'), (True, '1')]
[(False,'O'),(True,'1')]
ghci> :t [(False, 'O'), (True, '1')]
[(False, 'O'), (True, '1')] :: [(Bool, Char)]

d)
ghci> ([False, True ], ['0', '1'])
([False,True],"01")
ghci> :t ([False, True ], ['0', '1'])
([False, True ], ['0', '1']) :: ([Bool], [Char])

e)
ghci> :t [tail , init, reverse]
[tail , init, reverse] :: [[a] -> [a]]